--- a/omf-resctl/ruby/omf-resctl/omf_driver/aironet.rb
+++ b/omf-resctl/ruby/omf-resctl/omf_driver/aironet.rb
@@ -83,10 +83,10 @@ class AironetDevice < WirelessDevice
       when "bitrate"
         r = value.to_i
         br = case
-          when r == 1 : 2
-          when r == 2 : 4
-          when r == 5.5 : 11
-          when r == 11 : 22
+          when r == 1 then 2
+          when r == 2 then 4
+          when r == 5.5 then 11
+          when r == 11 then 22
           else
             raise "Unknown bitrate #{value}. Valid rates are 1, 2, 5.5, and 11."
         end
--- a/omf-resctl/ruby/omf-resctl/omf_driver/ath9k.rb
+++ b/omf-resctl/ruby/omf-resctl/omf_driver/ath9k.rb
@@ -115,8 +115,8 @@ class Ath9kDevice < WirelessDevice
     @wpapid = "/tmp/wpa.#{@deviceName}.pid"
     @type = @mode = @channel = @frequency = @essid = nil
     @baseDevice = case
-      when @deviceName == 'wlan0' : 'phy0'
-      when @deviceName == 'wlan1' : 'phy1'
+      when @deviceName == 'wlan0' then 'phy0'
+      when @deviceName == 'wlan1' then 'phy1'
     else
       raise "Unknown device name '#{@deviceName}'."
     end
@@ -187,11 +187,11 @@ class Ath9kDevice < WirelessDevice
 
       when "mode"
         @mode = case
-          when value.downcase == 'master' : :master
-          when value.downcase == 'managed' : :managed
-          when value.downcase == 'ad-hoc' : :adhoc
-          when value.downcase == 'adhoc' : :adhoc
-          when value.downcase == 'monitor' : :monitor
+          when value.downcase == 'master' then :master
+          when value.downcase == 'managed' then :managed
+          when value.downcase == 'ad-hoc' then :adhoc
+          when value.downcase == 'adhoc' then :adhoc
+          when value.downcase == 'monitor' then :monitor
           else
             raise "Unknown mode '#{value}'. Should be 'master', 'managed', "+
                   "'adhoc', or monitor."
--- a/omf-resctl/ruby/omf-resctl/omf_driver/atheros.rb
+++ b/omf-resctl/ruby/omf-resctl/omf_driver/atheros.rb
@@ -84,9 +84,9 @@ class AtherosDevice < WirelessDevice
       when 'type'
         # 'value' defines type of operation
         type = case
-          when value == 'a' : 1
-          when value == 'b' : 2
-          when value == 'g' : 3
+          when value == 'a' then 1
+          when value == 'b' then 2
+          when value == 'g' then 3
           else
             raise "Unknown type. Should be 'a', 'b', or 'g'."
         end
@@ -94,16 +94,16 @@ class AtherosDevice < WirelessDevice
 
       when "mode"
         mode = case
-          when value == 'master' : 'ap'
-          when value == 'Master' : 'ap'
-          when value == 'managed' : 'sta'
-          when value == 'Managed' : 'sta'
-          when value == 'ad-hoc' : 'adhoc'
-          when value == 'Ad-Hoc' : 'adhoc'
-          when value == 'adhoc' : 'adhoc'
-          when value == 'AdHoc' : 'adhoc'
-          when value == 'monitor' : 'monitor'
-          when value == 'Monitor' : 'monitor'
+          when value == 'master' then 'ap'
+          when value == 'Master' then 'ap'
+          when value == 'managed' then 'sta'
+          when value == 'Managed' then 'sta'
+          when value == 'ad-hoc' then 'adhoc'
+          when value == 'Ad-Hoc' then 'adhoc'
+          when value == 'adhoc' then 'adhoc'
+          when value == 'AdHoc' then 'adhoc'
+          when value == 'monitor' then 'monitor'
+          when value == 'Monitor' then 'monitor'
           else
             raise "Unknown mode '#{value}'. Should be 'master', 'managed', or 'adhoc'."
         end
@@ -118,8 +118,8 @@ class AtherosDevice < WirelessDevice
 	# this config file on your on ORBIT deployment, the following lines 
 	# must be changed accordingly)
         baseDevice = case
-          when @deviceName == 'ath0' : 'wifi0'
-          when @deviceName == 'ath1' : 'wifi1'
+          when @deviceName == 'ath0' then 'wifi0'
+          when @deviceName == 'ath1' then 'wifi1'
           else
             raise "Unknown device name '#{@deviceName}'."
         end
--- a/omf-resctl/ruby/omf-resctl/omf_driver/intel.rb
+++ b/omf-resctl/ruby/omf-resctl/omf_driver/intel.rb
@@ -56,9 +56,9 @@ class IntelDevice < WirelessDevice
       when 'type'
         # 'value' defines type of operation
         type = case
-          when value == 'a' : 1
-          when value == 'b' : 2
-          when value == 'g' : 3
+          when value == 'a' then 1
+          when value == 'b' then 2
+          when value == 'g' then 3
           else
             raise "Unknown type. Should be 'a', 'b', or 'g'."
         end
@@ -67,13 +67,13 @@ class IntelDevice < WirelessDevice
       when "mode"
         # 'value' defines mode of operation
         mode = case
-          when value == 'Managed' : 'managed'
-          when value == 'managed' : 'managed'
-          when value == 'Master' : 'master'
-          when value == 'master' : 'master'
-          when value == 'ad-hoc' : 'ad-hoc'
-          when value == 'adhoc' : 'ad-hoc'
-          when value == 'monitor' : 'monitor'
+          when value == 'Managed' then 'managed'
+          when value == 'managed' then 'managed'
+          when value == 'Master' then 'master'
+          when value == 'master' then 'master'
+          when value == 'ad-hoc' then 'ad-hoc'
+          when value == 'adhoc' then 'ad-hoc'
+          when value == 'monitor' then 'monitor'
           else
             raise "Unknown mode '#{value}'. Should be 'managed', or 'ad-hoc'."
         end
